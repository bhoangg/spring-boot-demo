spring:
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/hhd_blog_db?user=root

    username: root
    password: ${HHD_PASSWORD}
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
    hibernate:
      ddl-auto: none
    show-sql: true
    generate-ddl: true

  app:
    auth:
      tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
      tokenExpirationMsec: 864000000
    oauth2:
      # After successfully authenticating with the OAuth2 Provider,
      # we'll be generating an auth token for the user and sending the token to the
      # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
      # We're not using cookies because they won't work well in mobile clients.
      authorizedRedirectUris:
        - http://localhost:3000/oauth2/redirect
        - myandroidapp://oauth2/redirect
        - myiosapp://oauth2/redirect
  security:
    oauth2:
      client:
        registration:
          github:
            clientId: d3e47fc2ddd966fa4352
            clientSecret: 3bc0f6b8332f93076354c2a5bada2f5a05aea60d
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - user:email
              - read:user
          facebook:
            clientId: 121189305185277
            clientSecret: 42ffe5aa7379e8326387e0fe16f34132
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}" # Note that facebook now mandates the use of https redirect URIs, so make sure your app supports https in production
            scope:
              - email
              - public_profile
          google:
            clientId: ${HHD_CLIENT_ID}
            clientSecret: ${HHD_CLIENT_SCERET}
            scope:
              - email
              - profile
